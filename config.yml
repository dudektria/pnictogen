packages:

  ADF:
    boilerplate: |+
      TITLE {{ molecule.name }}

      CHARGE {{ molecule.charge }}  {{ molecule.mult - 1 }}

      Number of atoms
       {{ molecule.natom }}

      ATOMS Cartesian
      {{ molecule.to_string("xyz") }}
      End

      Basis
      End

      Geometry
      End



  DALTON:
    boilerplate: |+
      {{ molecule.to_string('dalmol')}}

  GAMESS:
    boilerplate: |+1
      $CONTRL COORD=CART UNITS=ANGS $END

      $DATA
     {{ molecule.name }}
     C1
     {{ molecule.to_string("gamin") }}
      $END



  GAMESSUK:
    boilerplate: |+
      {{ molecule.to_string('gukin') }}
  # Gaussian:
    # boilerplate: |+
      # {{ molecule.to_string('gzmat') }}
  Gaussian:
    boilerplate: |+
      #Put Keywords Here, check Charge and Multiplicity.

       {{ molecule.name }}

      {{ molecule.charge }}  {{ molecule.mult }}
      {{ molecule.to_string("xyz") }}


  Jaguar:
    boilerplate: |+
      {{ molecule.to_string('jin') }}
  Molpro:
    boilerplate: |+
      {{ molecule.to_string('mp') }}
  # MOPAC:
    # boilerplate: |+
      # {{ molecule.to_string('mopin') }}
  MOPAC:
    boilerplate: |+
      CHARGE={{ molecule.charge }} MS={{ (molecule.mult - 1)/2 }}
      {{ molecule.name }}

      {{ molecule.to_string("mop") }}

  MPQC:
    boilerplate: |+
      {{ molecule.to_string('mpqcin') }}
  NWChem:
    boilerplate: |+
      start molecule

      title {{ molecule.name }}

      geometry units angstroms print xyz autosym
      {{ molecule.to_string("xyz") }}
      end

  ORCA:
    boilerplate: |+
      # {{ molecule.name }}
      ! Opt

      * xyz {{ molecule.charge }} {{ molecule.mult }}
      {{ molecule.to_string("xyz") }}
      *

  Psi:
    boilerplate: |+
      # {{ molecule.name }}

      molecule {
      {{ molecule.charge }} {{ molecule.mult }}
      {{ molecule.to_string("xyz") }}
      units angstrom
      }

      optimize('scf')
  QChem:
    boilerplate: |+
      {{ molecule.to_string('qcin') }}
  ZINDO:
    boilerplate: |+
      {{ molecule.to_string('zin') }}
